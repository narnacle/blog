<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Narnacle&#39;s Dev Blog</title>
    <link>https://narnacle.com/posts/</link>
    <description>Recent content in Posts on Narnacle&#39;s Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Jul 2025 14:00:00 +0300</lastBuildDate>
    <atom:link href="https://narnacle.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raspberry Pi W Surveillance Camera</title>
      <link>https://narnacle.com/posts/raspberry-pi-w-surveillance-camera/</link>
      <pubDate>Sat, 19 Jul 2025 14:00:00 +0300</pubDate>
      <guid>https://narnacle.com/posts/raspberry-pi-w-surveillance-camera/</guid>
      <description>&lt;p&gt;Setting up a security camera using a Raspberry Pi is a popular and budget-friendly way to create a DIY surveillance system. The Raspberry Pi can be equipped with a camera module and configured to stream video or take periodic snapshots. Here&amp;rsquo;s a simple guide to help you set up a basic security camera using a Raspberry Pi:&lt;/p&gt;&#xA;&lt;h3 id=&#34;requirements&#34;&gt;Requirements:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Raspberry Pi&lt;/strong&gt; (any model, but newer models will perform better)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Raspberry Pi Camera Module&lt;/strong&gt; (or a compatible USB camera)&lt;/p&gt;</description>
    </item>
    <item>
      <title>How Secure Shell Works (SSH)</title>
      <link>https://narnacle.com/posts/how-secure-shell-works/</link>
      <pubDate>Fri, 18 Jul 2025 14:00:00 +0300</pubDate>
      <guid>https://narnacle.com/posts/how-secure-shell-works/</guid>
      <description>&lt;p&gt;SSH (Secure Shell) is a cryptographic network protocol used to securely connect to remote systems over an unsecured network. It’s commonly used for managing servers, accessing network devices, and transferring files securely. Here’s a simple breakdown of how it works:&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-client-and-server&#34;&gt;1. &lt;strong&gt;Client and Server&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Client&lt;/strong&gt;: The system trying to access another system remotely. Usually, you run an SSH client (like &lt;code&gt;ssh&lt;/code&gt; on Unix/Linux or PuTTY on Windows).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: The remote system that the client wants to connect to, which runs an SSH server (like &lt;code&gt;sshd&lt;/code&gt; on Unix/Linux).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-initiating-the-connection&#34;&gt;2. &lt;strong&gt;Initiating the Connection&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When you try to connect to a remote system using SSH, the client sends a request to the SSH server on a specific port (usually port 22).&lt;/li&gt;&#xA;&lt;li&gt;The server then responds by sending its public key to the client.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-key-exchange-and-authentication&#34;&gt;3. &lt;strong&gt;Key Exchange and Authentication&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Key Exchange&lt;/strong&gt;: The client and server exchange encryption keys to establish a secure communication channel. They use algorithms like Diffie-Hellman or Elliptic Curve Diffie-Hellman (ECDH) for this. This ensures that even if someone is eavesdropping on the connection, they won’t be able to decrypt the data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python Selenium Tutorial - Automate Websites and Create Bots</title>
      <link>https://narnacle.com/posts/python-selenium-tutorial-automate-websites-and-create-bots/</link>
      <pubDate>Thu, 17 Jul 2025 14:00:00 +0300</pubDate>
      <guid>https://narnacle.com/posts/python-selenium-tutorial-automate-websites-and-create-bots/</guid>
      <description>&lt;p&gt;Automating a web browser with Selenium allows you to control a browser (like Chrome, Firefox, etc.) using Python code. This is useful for tasks like web scraping, testing, or automating repetitive tasks like filling out forms or interacting with web elements.&lt;/p&gt;&#xA;&lt;p&gt;Here’s a basic guide to get you started:&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-set-up-your-environment&#34;&gt;1. &lt;strong&gt;Set up your environment&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;To use Selenium with Python, you&amp;rsquo;ll need to install the &lt;code&gt;selenium&lt;/code&gt; package and a web driver for the browser you want to control.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
